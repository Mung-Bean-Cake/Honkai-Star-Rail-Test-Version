tiwei_soldier = {
	category = worker
	swappable_data = {
		default = {
			condition_string = SOLDIER_JOB_TRIGGER
			building_icon = building_stronghold
		}
		swap_type = {
			trigger = {
				soldier_is_necromancer = yes
			}
			name = necromancer
			desc = necromancer
			icon = necromancer
			building_icon = building_dread_encampment
			weight = 50
		}
	}
	possible_pre_triggers = {
		has_owner = yes
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}
	possible = {
		soldier_job_check_trigger = yes
		owner = { is_gestalt = no }
	}
	tags = { soldier }
	triggered_country_modifier = {
		potential = {
			exists = owner
			owner = {
				has_valid_civic = civic_tiewei
			}
		}
		modifier = {
			country_naval_cap_add = 1
		}
	}
	triggered_country_modifier = {
		potential = {
			exists = owner
			owner = {
                has_councilor = { COUNCILOR = "councilor_tiewei" }
			}
		}
		modifier = {
			country_naval_cap_add = 1
		}
	}

	planet_modifier = {
		planet_crime_add = -5
	}

	country_modifier = {
		country_naval_cap_add = 4
	}
	inline_script = "output/soldier_triggered_modifiers"

	resources = {
		category = planet_soldiers
		inline_script = "output/soldier_output"
		produces = {
			trigger = {
				soldier_is_necromancer = yes
			}
			physics_research = 2
			society_research = 2
		}
		upkeep = {
			trigger = {
				soldier_is_necromancer = yes
			}
			food = 1
			consumer_goods = 0.1
		}
	}
	weight = {
		weight = @soldier_job_weight
		modifier = {
			factor = 10
			exists = planet
			planet = { has_modifier = martial_law }
		}
		modifier = {
			factor = 2
			has_trait = trait_resilient
		}
		modifier = {
			factor = 2
			has_trait = trait_very_strong
		}
		modifier = {
			factor = 1.5
			has_trait = trait_strong
		}
		modifier = {
			factor = 0.5
			has_trait = trait_weak
		}
		modifier = {
			factor = 0.1
			is_enslaved = yes
			NOT = { has_slavery_type = { type = slavery_military } }
		}
		modifier = {
			factor = 10
			is_enslaved = yes
			has_slavery_type = { type = slavery_military }
		}
		modifier = {
			factor = 0.1
			can_take_servant_job = yes
		}
		modifier = {
			factor = 1.1
			has_trait = trait_cybernetic
		}
		modifier = {
			factor = 2
			has_trait = trait_presapient_earthbound
		}
		modifier = {
			factor = 1.1
			has_trait = trait_limited_regeneration
		}
		modifier = {
			factor = 1.1
			has_trait = trait_presapient_proles
		}
		modifier = {
			factor = 1.1
			has_trait = trait_brainslug
		}
		modifier = {
			factor = 1.05
			has_trait = trait_presapient_natural_intellectuals
		}
		modifier = {
			factor = 1.05
			OR = {
				has_trait = trait_robust
				has_trait = trait_robot_efficient_processors
			}
		}
		modifier = {
			factor = 1.05
			has_trait = trait_nerve_stapled
		}
		modifier = {
			factor = 1.1
			OR = {
				has_trait = trait_robot_propaganda_machines
				has_trait = trait_traditional
			}
		}
		modifier = {
			factor = 0.9
			has_trait = trait_quarrelsome
		}
		modifier = {
			factor = 0
			can_be_soldier = no
		}
		modifier = {
			factor = 2
			has_trait = trait_lithoid
		}
		modifier = {
			factor = 1.5
			OR = {
				has_trait = trait_robust
			}
		}
	}
}
yaliluo_maintenance_worker = {
	category = worker
	swappable_data = {
		default = {
			icon = miner
			condition_string = WORKER_JOB_TRIGGER
			building_icon = building_mineral_purification_plant
		}
		swap_type = {
			trigger = {
				miner_is_scrap_miner_trigger = yes
			}
			name = scrap_miner
			desc = scrap_miner
			weight = 5
		}
		swap_type = {
			trigger = {
				miner_is_cave_cleaner_trigger = yes
			}
			name = cave_cleaner
			desc = cave_cleaner
			weight = 10
		}
		swap_type = {
			trigger = {
				miner_is_mineral_diver_trigger = yes
			}
			name = mineral_diver
			desc = mineral_diver
			weight = 15
		}
		swap_type = {
			trigger = {
				miner_is_turtle_miner_trigger = yes
			}
			name = turtle_miner
			desc = turtle_miner
			weight = 20
		}
	}
	possible_pre_triggers = {
		has_owner = yes
		is_enslaved = no
		is_being_purged = no
		is_being_assimilated = no
		is_sapient = yes
	}
	tags = { minerals }
	possible_precalc = can_fill_worker_job
	possible = {

	}
	planet_modifier = {
		planet_amenities_add = 1
	}
	resources = {
		category = planet_researchers
		produces = {
			unity = 1
			minerals = 2
			engineering_research = 1
		}
		upkeep = {
			energy = 1
			food = 0.15
		}
	}
	weight = {
		weight = 5
		modifier = {
			factor = 0.2
			has_citizenship_rights = no
			NOT = {
				has_trait = trait_mechanical
			}
		}
		modifier = {
			factor = 1.25
			OR = {
				has_trait = trait_robust
			}
		}
	}
}