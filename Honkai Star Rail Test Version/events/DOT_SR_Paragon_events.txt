
namespace = SR_Paragon

###############
# 传奇领袖
###############

#招募事件
country_event = {
	id = SR_Paragon.101
	title = "SR_Paragon.101.name"
	desc = "SR_Paragon.101.desc"
	show_sound = event_psionic
	location = root
	fire_only_once = yes
	trigger = {
		years_passed > 3
		is_ai = no
	}
	immediate = {
	}
	diplomatic = yes #是否启用外交界面
	picture_event_data = { 
	room = "DOT_SR_Dvalin_3_room" #房间图层
	}
	option = {
		name = SR_Paragon.101.a
		add_resource = { minerals = -100 }
		country_event = { id = SR_Paragon.001 days = 10 }
	}
	option = {
		name = SR_Paragon.101.b
		add_resource = { food = -100 }
		country_event = { id = SR_Paragon.002 days = 10 }
	}
	option = {
		name = SR_Paragon.101.c
		add_resource = { food = -100 }
		country_event = { id = SR_Paragon.003 days = 10 }
	}
	option = {
		name = SR_Paragon.101.d
		add_resource = { food = -100 }
		country_event = { id = SR_Paragon.004 days = 10 }
	}
	option = {
		name = SR_Paragon.101.e
		add_resource = { food = -100 }
		country_event = { id = SR_Paragon.005 days = 10 }
	}
	option = {
		name = SR_Paragon.101.f
		add_resource = { food = -100 }
		country_event = { id = SR_Paragon.006 days = 10 }
	}
	option = {
		name = SR_Paragon.101.g
		add_resource = { food = -100 }
		country_event = { id = SR_Paragon.007 days = 10 }
	}
	option = {
		name = SR_Paragon.101.h
		add_resource = { food = -100 }
		country_event = { id = SR_Paragon.008 days = 10 }
	}
	option = {
		name = SR_Paragon.101.i
		add_resource = { alloys = -100 }
		country_event = { id = SR_Paragon.009 days = 10 }
	}
}


# 三月七 March_7th sanyueqi
country_event = {
	id = SR_Paragon.001
	title = "SR_Paragon_March_7th"
	desc = "SR_Paragon_March_7th_desc"
	is_triggered_only = yes
	picture = GFX_leader_recruitment_bg_SR_01
	# 领袖招募事件背景，在gfx/interface/leaders/recruitment_bgs
	event_window_type = leader_recruit # 使用原版的领袖招募事件UI
	picture_event_data = {
		portrait = event_target:sanyueqi_leader 
		# 存储的领袖target的肖像（可以类比c语言的指针）
		room = paragon_keides_room # 房间图像
	}
	immediate = {
		hidden_effect = {
			SR_leader_creator = { # 使用脚本，直接填写脚本的参数就行
				SPECIES_NAME = "Star_Rail"
				SPECIES_CLASS = "Star_Rail"
				NAME = SR_Paragon_March_7th # 名字
				CATCH_PHRASE = SR_Paragon_March_7th_desc # 描述
				DESC = SR_Paragon_March_7th_desc # 描述
				LEADER_PORTRAIT = sanyueqi
				SKILL = 5
				CLASS = commander
				GENDER = female
				HIDEAGE = yes
				ETHIC = ethic_materialist
				EVENT_TARGET = sanyueqi_leader
			}
			last_created_leader = {
				remove_all_positive_traits = yes 
				# 移除所有的特质，使用原版的领袖生成脚本会导致额外选一次特质，触发特质黑箱
				add_trait = leader_trait_carefree
				add_trait = leader_trait_archaeologist
				add_trait = leader_trait_meticulous_2
				add_trait = leader_trait_sapient_AI_assistant
				add_trait = leader_trait_fleet_organizer
				add_trait = trait_ruler_charismatic
				# change_background_job = tiwate_researcher # 更改角色的背景职业
			}
		}
	}
	option = { # 对话文本
		trigger = { }
		name = SR_Paragon.001.a
		is_dialog_only = yes
		response_text = SR_Paragon.001.a.response
	}
	option = {
		trigger = { }
		name = SR_Paragon.001.b
		is_dialog_only = yes
		response_text = SR_Paragon.001.b.response
	}

	option = {
		name = SR_Paragon.001.c
		response_text = SR_Paragon.001.c.response
		is_dialog_only = yes
	}
	option = {
		name = HIRE
		tag = hire_leader
		SR_hire_leader = { # 领袖招募脚本
			EVENT_TARGET = sanyueqi_leader
		}
		set_country_flag = sanyueqi_set
		last_created_leader = {
			set_leader_flag = legendary_leader
			save_global_event_target_as = sanyueqi_leader
			set_leader_flag = immune_to_negative_traits
			set_leader_flag = sanyueqi
		}
	}
	option = {
		name = DISMISS
		tag = dismiss_leader
		hidden_effect = {
			event_target:sanyueqi_leader = {
				kill_leader = { show_notification = no }
			}
		}
	}
}

# 姬子 Himeko jizi
country_event = {
	id = SR_Paragon.002
	title = "SR_Paragon_Himeko"
	desc = "SR_Paragon_Himeko_desc"
	is_triggered_only = yes
	picture = GFX_leader_recruitment_bg_SR_01
	# 领袖招募事件背景，在gfx/interface/leaders/recruitment_bgs
	event_window_type = leader_recruit # 使用原版的领袖招募事件UI
	picture_event_data = {
		portrait = event_target:jizi_leader 
		# 存储的领袖target的肖像（可以类比c语言的指针）
		room = paragon_keides_room # 房间图像
	}
	immediate = {
		hidden_effect = {
			SR_leader_creator = { # 使用脚本，直接填写脚本的参数就行
				SPECIES_NAME = "Star_Rail"
				SPECIES_CLASS = "Star_Rail"
				NAME = SR_Paragon_Himeko # 名字
				CATCH_PHRASE = SR_Paragon_Himeko_desc # 描述
				DESC = SR_Paragon_Himeko_desc # 描述
				LEADER_PORTRAIT = jizi
				SKILL = 5
				CLASS = official
				GENDER = female
				HIDEAGE = yes
				ETHIC = ethic_materialist
				EVENT_TARGET = jizi_leader
			}
			last_created_leader = {
				remove_all_positive_traits = yes 
				# 移除所有的特质，使用原版的领袖生成脚本会导致额外选一次特质，触发特质黑箱
				add_trait = leader_trait_carefree
				add_trait = leader_trait_archaeologist
				add_trait = leader_trait_meticulous_2
				add_trait = leader_trait_sapient_AI_assistant
				add_trait = leader_trait_fleet_organizer
				add_trait = trait_ruler_charismatic
				add_trait = trait_ruler_eye_for_talent
				# change_background_job = tiwate_researcher # 更改角色的背景职业
			}
		}
	}
	option = { # 对话文本
		trigger = { }
		name = SR_Paragon.001.a
		is_dialog_only = yes
		response_text = SR_Paragon.001.a.response
	}
	option = {
		trigger = { }
		name = SR_Paragon.001.b
		is_dialog_only = yes
		response_text = SR_Paragon.001.b.response
	}

	option = {
		name = SR_Paragon.001.c
		response_text = SR_Paragon.001.c.response
		is_dialog_only = yes
	}
	option = {
		name = HIRE
		tag = hire_leader
		SR_hire_leader = { # 领袖招募脚本
			EVENT_TARGET = jizi_leader
		}
		set_country_flag = jizi_set
		last_created_leader = {
			set_leader_flag = legendary_leader
			save_global_event_target_as = jizi_leader
			set_leader_flag = immune_to_negative_traits
			set_leader_flag = jizi
		}
	}
	option = {
		name = DISMISS
		tag = dismiss_leader
		hidden_effect = {
			event_target:jizi_leader = {
				kill_leader = { show_notification = no }
			}
		}
	}
}

# 瓦尔特 Welt waerte
country_event = {
	id = SR_Paragon.003
	title = "SR_Paragon_Welt"
	desc = "SR_Paragon_Welt_desc"
	is_triggered_only = yes
	picture = GFX_leader_recruitment_bg_SR_01
	# 领袖招募事件背景，在gfx/interface/leaders/recruitment_bgs
	event_window_type = leader_recruit # 使用原版的领袖招募事件UI
	picture_event_data = {
		portrait = event_target:waerte_leader 
		# 存储的领袖target的肖像（可以类比c语言的指针）
		room = paragon_keides_room # 房间图像
	}
	immediate = {
		hidden_effect = {
			SR_leader_creator = { # 使用脚本，直接填写脚本的参数就行
				SPECIES_NAME = "Star_Rail"
				SPECIES_CLASS = "Star_Rail"
				NAME = SR_Paragon_Welt # 名字
				CATCH_PHRASE = SR_Paragon_Welt_desc # 描述
				DESC = SR_Paragon_Welt_desc # 描述
				LEADER_PORTRAIT = waerte
				SKILL = 5
				CLASS = commander
				GENDER = female
				HIDEAGE = yes
				ETHIC = ethic_materialist
				EVENT_TARGET = waerte_leader

			}
			last_created_leader = {
				remove_all_positive_traits = yes 
				# 移除所有的特质，使用原版的领袖生成脚本会导致额外选一次特质，触发特质黑箱
				add_trait = leader_trait_carefree
				add_trait = leader_trait_archaeologist
				add_trait = leader_trait_meticulous_2
				add_trait = leader_trait_sapient_AI_assistant
				add_trait = leader_trait_fleet_organizer
				add_trait = trait_ruler_charismatic
				# change_background_job = tiwate_researcher # 更改角色的背景职业
			}
		}
	}
	option = { # 对话文本
		trigger = { }
		name = SR_Paragon.001.a
		is_dialog_only = yes
		response_text = SR_Paragon.001.a.response
	}
	option = {
		trigger = { }
		name = SR_Paragon.001.b
		is_dialog_only = yes
		response_text = SR_Paragon.001.b.response
	}

	option = {
		name = SR_Paragon.001.c
		response_text = SR_Paragon.001.c.response
		is_dialog_only = yes
	}
	option = {
		name = HIRE
		tag = hire_leader
		SR_hire_leader = { # 领袖招募脚本
			EVENT_TARGET = waerte_leader
		}
		set_country_flag = waerte_set
		last_created_leader = {
			set_leader_flag = legendary_leader
			save_global_event_target_as = waerte_leader
			set_leader_flag = immune_to_negative_traits
			set_leader_flag = waerte
		}
	}
	option = {
		name = DISMISS
		tag = dismiss_leader
		hidden_effect = {
			event_target:waerte_leader = {
				kill_leader = { show_notification = no }
			}
		}
	}
}

# 卡芙卡 Kafka kafuka
country_event = {
	id = SR_Paragon.004
	title = "SR_Paragon_Kafka"
	desc = "SR_Paragon_Kafka_desc"
	is_triggered_only = yes
	picture = GFX_leader_recruitment_bg_SR_01
	# 领袖招募事件背景，在gfx/interface/leaders/recruitment_bgs
	event_window_type = leader_recruit # 使用原版的领袖招募事件UI
	picture_event_data = {
		portrait = event_target:kafuka_leader 
		# 存储的领袖target的肖像（可以类比c语言的指针）
		room = paragon_keides_room # 房间图像
	}
	immediate = {
		hidden_effect = {
			SR_leader_creator = { # 使用脚本，直接填写脚本的参数就行
				SPECIES_NAME = "Star_Rail"
				SPECIES_CLASS = "Star_Rail"
				NAME = SR_Paragon_Kafka # 名字
				CATCH_PHRASE = SR_Paragon_Kafka_desc # 描述
				DESC = SR_Paragon_Kafka_desc # 描述
				LEADER_PORTRAIT = kafuka
				SKILL = 5
				CLASS = commander
				GENDER = female
				HIDEAGE = yes
				ETHIC = ethic_materialist
				EVENT_TARGET = kafuka_leader

			}
			last_created_leader = {
				remove_all_positive_traits = yes 
				# 移除所有的特质，使用原版的领袖生成脚本会导致额外选一次特质，触发特质黑箱
				add_trait = leader_trait_carefree
				add_trait = leader_trait_archaeologist
				add_trait = leader_trait_meticulous_2
				add_trait = leader_trait_sapient_AI_assistant
				add_trait = leader_trait_fleet_organizer
				add_trait = trait_ruler_charismatic
				# change_background_job = tiwate_researcher # 更改角色的背景职业
			}
		}
	}
	option = { # 对话文本
		trigger = { }
		name = SR_Paragon.001.a
		is_dialog_only = yes
		response_text = SR_Paragon.001.a.response
	}
	option = {
		trigger = { }
		name = SR_Paragon.001.b
		is_dialog_only = yes
		response_text = SR_Paragon.001.b.response
	}

	option = {
		name = SR_Paragon.001.c
		response_text = SR_Paragon.001.c.response
		is_dialog_only = yes
	}
	option = {
		name = HIRE
		tag = hire_leader
		SR_hire_leader = { # 领袖招募脚本
			EVENT_TARGET = kafuka_leader
		}
		set_country_flag = kafuka_set
		last_created_leader = {
			set_leader_flag = legendary_leader
			save_global_event_target_as = kafuka_leader
			set_leader_flag = immune_to_negative_traits
			set_leader_flag = kafuka
		}
	}
	option = {
		name = DISMISS
		tag = dismiss_leader
		hidden_effect = {
			event_target:kafuka_leader = {
				kill_leader = { show_notification = no }
			}
		}
	}
}

# 银狼 Silver_Wolf yinlang
country_event = {
	id = SR_Paragon.005
	title = "SR_Paragon_Silver_Wolf"
	desc = "SR_Paragon_Silver_Wolf_desc"
	is_triggered_only = yes
	picture = GFX_leader_recruitment_bg_SR_01
	# 领袖招募事件背景，在gfx/interface/leaders/recruitment_bgs
	event_window_type = leader_recruit # 使用原版的领袖招募事件UI
	picture_event_data = {
		portrait = event_target:yinlang_leader 
		# 存储的领袖target的肖像（可以类比c语言的指针）
		room = paragon_keides_room # 房间图像
	}
	immediate = {
		hidden_effect = {
			SR_leader_creator = { # 使用脚本，直接填写脚本的参数就行
				SPECIES_NAME = "Star_Rail"
				SPECIES_CLASS = "Star_Rail"
				NAME = SR_Paragon_Silver_Wolf # 名字
				CATCH_PHRASE = SR_Paragon_Silver_Wolf_desc # 描述
				DESC = SR_Paragon_Silver_Wolf_desc # 描述
				LEADER_PORTRAIT = yinlang
				SKILL = 5
				CLASS = commander
				GENDER = female
				HIDEAGE = yes
				ETHIC = ethic_materialist
				EVENT_TARGET = yinlang_leader

			}
			last_created_leader = {
				remove_all_positive_traits = yes 
				# 移除所有的特质，使用原版的领袖生成脚本会导致额外选一次特质，触发特质黑箱
				add_trait = leader_trait_carefree
				add_trait = leader_trait_archaeologist
				add_trait = leader_trait_meticulous_2
				add_trait = leader_trait_sapient_AI_assistant
				add_trait = leader_trait_fleet_organizer
				add_trait = trait_ruler_charismatic
				# change_background_job = tiwate_researcher # 更改角色的背景职业
			}
		}
	}
	option = { # 对话文本
		trigger = { }
		name = SR_Paragon.001.a
		is_dialog_only = yes
		response_text = SR_Paragon.001.a.response
	}
	option = {
		trigger = { }
		name = SR_Paragon.001.b
		is_dialog_only = yes
		response_text = SR_Paragon.001.b.response
	}

	option = {
		name = SR_Paragon.001.c
		response_text = SR_Paragon.001.c.response
		is_dialog_only = yes
	}
	option = {
		name = HIRE
		tag = hire_leader
		SR_hire_leader = { # 领袖招募脚本
			EVENT_TARGET = yinlang_leader
		}
		set_country_flag = yinlang_set
		last_created_leader = {
			set_leader_flag = legendary_leader
			save_global_event_target_as = yinlang_leader
			set_leader_flag = immune_to_negative_traits
			set_leader_flag = yinlang
		}
	}
	option = {
		name = DISMISS
		tag = dismiss_leader
		hidden_effect = {
			event_target:yinlang_leader = {
				kill_leader = { show_notification = no }
			}
		}
	}
}

# Acheron:"命途行者：黄泉" huangquan
country_event = {
	id = SR_Paragon.006
	title = "SR_Paragon_Acheron"
	desc = "SR_Paragon_Acheron_desc"
	is_triggered_only = yes
	picture = GFX_leader_recruitment_bg_SR_01
	# 领袖招募事件背景，在gfx/interface/leaders/recruitment_bgs
	event_window_type = leader_recruit # 使用原版的领袖招募事件UI
	picture_event_data = {
		portrait = event_target:huangquan_leader 
		# 存储的领袖target的肖像（可以类比c语言的指针）
		room = paragon_keides_room # 房间图像
	}
	immediate = {
		hidden_effect = {
			SR_leader_creator = { # 使用脚本，直接填写脚本的参数就行
				SPECIES_NAME = "Star_Rail"
				SPECIES_CLASS = "Star_Rail"
				NAME = SR_Paragon_Acheron # 名字
				CATCH_PHRASE = SR_Paragon_Acheron_desc # 描述
				DESC = SR_Paragon_Acheron_desc # 描述
				LEADER_PORTRAIT = huangquan
				SKILL = 5
				CLASS = commander
				GENDER = female
				HIDEAGE = yes
				ETHIC = ethic_materialist
				EVENT_TARGET = huangquan_leader

			}
			last_created_leader = {
				remove_all_positive_traits = yes 
				# 移除所有的特质，使用原版的领袖生成脚本会导致额外选一次特质，触发特质黑箱
				add_trait = leader_trait_carefree
				add_trait = leader_trait_archaeologist
				add_trait = leader_trait_meticulous_2
				add_trait = leader_trait_sapient_AI_assistant
				add_trait = leader_trait_fleet_organizer
				add_trait = trait_ruler_charismatic
				# change_background_job = tiwate_researcher # 更改角色的背景职业
			}
		}
	}
	option = { # 对话文本
		trigger = { }
		name = SR_Paragon.001.a
		is_dialog_only = yes
		response_text = SR_Paragon.001.a.response
	}
	option = {
		trigger = { }
		name = SR_Paragon.001.b
		is_dialog_only = yes
		response_text = SR_Paragon.001.b.response
	}

	option = {
		name = SR_Paragon.001.c
		response_text = SR_Paragon.001.c.response
		is_dialog_only = yes
	}
	option = {
		name = HIRE
		tag = hire_leader
		SR_hire_leader = { # 领袖招募脚本
			EVENT_TARGET = huangquan_leader
		}
		set_country_flag = huangquan_set
		last_created_leader = {
			set_leader_flag = legendary_leader
			save_global_event_target_as = huangquan_leader
			set_leader_flag = immune_to_negative_traits
			set_leader_flag = huangquan
		}
	}
	option = {
		name = DISMISS
		tag = dismiss_leader
		hidden_effect = {
			event_target:huangquan_leader = {
				kill_leader = { show_notification = no }
			}
		}
	}
}

# Firefly:"命途行者：流萤" Firefly
country_event = {
	id = SR_Paragon.007
	title = "SR_Paragon_Firefly"
	desc = "SR_Paragon_Firefly_desc"
	is_triggered_only = yes
	picture = GFX_leader_recruitment_bg_SR_01
	# 领袖招募事件背景，在gfx/interface/leaders/recruitment_bgs
	event_window_type = leader_recruit # 使用原版的领袖招募事件UI
	picture_event_data = {
		portrait = event_target:Firefly_leader 
		# 存储的领袖target的肖像（可以类比c语言的指针）
		room = paragon_keides_room # 房间图像
	}
	immediate = {
		hidden_effect = {
			SR_leader_creator = { # 使用脚本，直接填写脚本的参数就行
				SPECIES_NAME = "Star_Rail"
				SPECIES_CLASS = "Star_Rail"
				NAME = SR_Paragon_Firefly # 名字
				CATCH_PHRASE = SR_Paragon_Firefly_desc # 描述
				DESC = SR_Paragon_Firefly_desc # 描述
				LEADER_PORTRAIT = Firefly
				SKILL = 5
				CLASS = commander
				GENDER = female
				HIDEAGE = yes
				ETHIC = ethic_materialist
				EVENT_TARGET = Firefly_leader

			}
			last_created_leader = {
				remove_all_positive_traits = yes 
				# 移除所有的特质，使用原版的领袖生成脚本会导致额外选一次特质，触发特质黑箱
				add_trait = leader_trait_carefree
				add_trait = leader_trait_archaeologist
				add_trait = leader_trait_meticulous_2
				add_trait = leader_trait_sapient_AI_assistant
				add_trait = leader_trait_fleet_organizer
				add_trait = trait_ruler_charismatic
				# change_background_job = tiwate_researcher # 更改角色的背景职业
			}
		}
	}
	option = { # 对话文本
		trigger = { }
		name = SR_Paragon.001.a
		is_dialog_only = yes
		response_text = SR_Paragon.001.a.response
	}
	option = {
		trigger = { }
		name = SR_Paragon.001.b
		is_dialog_only = yes
		response_text = SR_Paragon.001.b.response
	}

	option = {
		name = SR_Paragon.001.c
		response_text = SR_Paragon.001.c.response
		is_dialog_only = yes
	}
	option = {
		name = HIRE
		tag = hire_leader
		SR_hire_leader = { # 领袖招募脚本
			EVENT_TARGET = Firefly_leader
		}
		set_country_flag = Firefly_set
		last_created_leader = {
			set_leader_flag = legendary_leader
			save_global_event_target_as = Firefly_leader
			set_leader_flag = immune_to_negative_traits
			set_leader_flag = Firefly
		}
	}
	option = {
		name = DISMISS
		tag = dismiss_leader
		hidden_effect = {
			event_target:Firefly_leader = {
				kill_leader = { show_notification = no }
			}
		}
	}
}

# Jingliu:"命途行者：镜流" jingliu
country_event = {
	id = SR_Paragon.008
	title = "SR_Paragon_Jingliu"
	desc = "SR_Paragon_Jingliu_desc"
	is_triggered_only = yes
	picture = GFX_leader_recruitment_bg_SR_01
	# 领袖招募事件背景，在gfx/interface/leaders/recruitment_bgs
	event_window_type = leader_recruit # 使用原版的领袖招募事件UI
	picture_event_data = {
		portrait = event_target:jingliu_leader 
		# 存储的领袖target的肖像（可以类比c语言的指针）
		room = paragon_keides_room # 房间图像
	}
	immediate = {
		hidden_effect = {
			SR_leader_creator = { # 使用脚本，直接填写脚本的参数就行
				SPECIES_NAME = "Star_Rail"
				SPECIES_CLASS = "Star_Rail"
				NAME = SR_Paragon_Jingliu # 名字
				CATCH_PHRASE = SR_Paragon_Jingliu_desc # 描述
				DESC = SR_Paragon_Jingliu_desc # 描述
				LEADER_PORTRAIT = jingliu
				SKILL = 5
				CLASS = commander
				GENDER = female
				HIDEAGE = yes
				ETHIC = ethic_materialist
				EVENT_TARGET = jingliu_leader

			}
			last_created_leader = {
				remove_all_positive_traits = yes 
				# 移除所有的特质，使用原版的领袖生成脚本会导致额外选一次特质，触发特质黑箱
				add_trait = leader_trait_carefree
				add_trait = leader_trait_archaeologist
				add_trait = leader_trait_meticulous_2
				add_trait = leader_trait_sapient_AI_assistant
				add_trait = leader_trait_fleet_organizer
				add_trait = trait_ruler_charismatic
				# change_background_job = tiwate_researcher # 更改角色的背景职业
			}
		}
	}
	option = { # 对话文本
		trigger = { }
		name = SR_Paragon.001.a
		is_dialog_only = yes
		response_text = SR_Paragon.001.a.response
	}
	option = {
		trigger = { }
		name = SR_Paragon.001.b
		is_dialog_only = yes
		response_text = SR_Paragon.001.b.response
	}

	option = {
		name = SR_Paragon.001.c
		response_text = SR_Paragon.001.c.response
		is_dialog_only = yes
	}
	option = {
		name = HIRE
		tag = hire_leader
		SR_hire_leader = { # 领袖招募脚本
			EVENT_TARGET = jingliu_leader
		}
		set_country_flag = jingliu_set
		last_created_leader = {
			set_leader_flag = legendary_leader
			save_global_event_target_as = jingliu_leader
			set_leader_flag = immune_to_negative_traits
			set_leader_flag = jingliu
		}
	}
	option = {
		name = DISMISS
		tag = dismiss_leader
		hidden_effect = {
			event_target:jingliu_leader = {
				kill_leader = { show_notification = no }
			}
		}
	}
}

# Ruan_Mei:"命途行者：阮梅" ruanmei
country_event = {
	id = SR_Paragon.009
	title = "SR_Paragon_Ruan_Mei"
	desc = "SR_Paragon_Ruan_Mei_desc"
	is_triggered_only = yes
	picture = GFX_leader_recruitment_bg_SR_01
	# 领袖招募事件背景，在gfx/interface/leaders/recruitment_bgs
	event_window_type = leader_recruit # 使用原版的领袖招募事件UI
	picture_event_data = {
		portrait = event_target:ruanmei_leader 
		# 存储的领袖target的肖像（可以类比c语言的指针）
		room = paragon_keides_room # 房间图像
	}
	immediate = {
		hidden_effect = {
			SR_leader_creator = { # 使用脚本，直接填写脚本的参数就行
				SPECIES_NAME = "Star_Rail"
				SPECIES_CLASS = "Star_Rail"
				NAME = SR_Paragon_Ruan_Mei # 名字
				CATCH_PHRASE = SR_Paragon_Ruan_Mei_desc # 描述
				DESC = SR_Paragon_Ruan_Mei_desc # 描述
				LEADER_PORTRAIT = ruanmei
				SKILL = 5
				CLASS = scientist
				GENDER = female
				HIDEAGE = yes
				ETHIC = ethic_materialist
				EVENT_TARGET = ruanmei_leader

			}
			last_created_leader = {
				remove_all_positive_traits = yes 
				# 移除所有的特质，使用原版的领袖生成脚本会导致额外选一次特质，触发特质黑箱
				add_trait = leader_trait_carefree
				add_trait = leader_trait_archaeologist
				add_trait = leader_trait_meticulous_2
				add_trait = leader_trait_sapient_AI_assistant
				add_trait = leader_trait_fleet_organizer
				add_trait = trait_ruler_charismatic
				# change_background_job = tiwate_researcher # 更改角色的背景职业
			}
		}
	}
	option = { # 对话文本
		trigger = { }
		name = SR_Paragon.001.a
		is_dialog_only = yes
		response_text = SR_Paragon.001.a.response
	}
	option = {
		trigger = { }
		name = SR_Paragon.001.b
		is_dialog_only = yes
		response_text = SR_Paragon.001.b.response
	}

	option = {
		name = SR_Paragon.001.c
		response_text = SR_Paragon.001.c.response
		is_dialog_only = yes
	}
	option = {
		name = HIRE
		tag = hire_leader
		SR_hire_leader = { # 领袖招募脚本
			EVENT_TARGET = ruanmei_leader
		}
		set_country_flag = ruanmei_set
		last_created_leader = {
			set_leader_flag = legendary_leader
			save_global_event_target_as = ruanmei_leader
			set_leader_flag = immune_to_negative_traits
			set_leader_flag = ruanmei
		}
	}
	option = {
		name = DISMISS
		tag = dismiss_leader
		hidden_effect = {
			event_target:ruanmei_leader = {
				kill_leader = { show_notification = no }
			}
		}
	}
}