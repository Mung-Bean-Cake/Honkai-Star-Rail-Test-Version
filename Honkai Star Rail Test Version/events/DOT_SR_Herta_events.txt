
namespace = DOT_SR_Herta

country_event = {
	id = DOT_SR_Herta.1
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		has_civic = civic_herta_1
		has_origin = origin_Herta_Space_Station
	}
	immediate = {
		from = {
			if = {
				limit = {
					leader_class = scientist
				}
				add_trait = {trait = leader_herta_common show_message = no}
			}
		}
	}
}
country_event = {#初试化设置
	id = DOT_SR_Herta.2
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		has_origin = origin_Herta_Space_Station
	}
	immediate = {
		create_species = {
			name = star_rail_leader # 物种名称
			class = Star_Rail # 物种类别
			portrait = heita # 肖像
			traits = {
				trait = "trait_enduring" # 物种特质
			}
			immortal = yes
			allow_negative_traits = no
			effect = {
				save_event_target_as = heita_leader_species
			}
		}
		create_species = {
			name = star_rail_leader # 物种名称
			class = Star_Rail # 物种类别
			portrait = daheita # 肖像
			traits = {
				trait = "trait_enduring" # 物种特质
			}
			immortal = yes
			allow_negative_traits = no
			effect = {
				save_event_target_as = daheita_leader_species
			}
		}
		create_species = {
			name = star_rail_leader # 物种名称
			class = Star_Rail # 物种类别
			portrait = aisida # 肖像
			traits = {
				trait = "trait_enduring" # 物种特质
			}
			immortal = yes
			allow_negative_traits = no
			effect = {
				save_event_target_as = aisida_leader_species
			}
		}
		create_species = {
			name = star_rail_leader # 物种名称
			class = Star_Rail # 物种类别
			portrait = alan # 肖像
			traits = {
				trait = "trait_enduring" # 物种特质
			}
			immortal = yes
			allow_negative_traits = no
			effect = {
				save_event_target_as = alan_leader_species
			}
		}
		ruler = {
			remove_all_positive_traits = yes
			set_name = NAME_heita
			change_species = event_target:heita_leader_species
			change_leader_class = scientist
			change_leader_portrait = heita
			change_background_ethic = ethic_materialist
			change_background_job = event_fake_job_1
			add_skill_without_trait_selection = 6
			add_trait = {trait = leader_herta_t1 show_message = no}
			add_trait = {trait = leader_herta_t2 show_message = no}
			add_trait = {trait = leader_herta_t3 show_message = no}
			set_gender = female
			set_age = 16
			set_leader_flag = legendary_leader
			set_leader_flag = immune_to_negative_traits
			set_leader_flag = heita
			set_leader_flag = leader_death_events_blocked  # 阻止原版葬礼事件
			save_global_event_target_as = heita_leader
		}
		random_owned_leader = {
			limit = {
				is_ruler = no
				leader_class = scientist
			}
			remove_all_positive_traits = yes
			set_name = NAME_daheita
			change_species = event_target:daheita_leader_species
			change_leader_class = scientist
			change_leader_portrait = daheita
			change_background_ethic = ethic_materialist
			change_background_job = event_fake_job_1
			add_skill_without_trait_selection = 6
			add_trait = {trait = leader_daherta_t1 show_message = no}
			add_trait = {trait = leader_daherta_t2 show_message = no}
			add_trait = {trait = leader_daherta_t3 show_message = no}
			set_gender = female
			set_age = 16
			set_leader_flag = legendary_leader
			set_leader_flag = immune_to_negative_traits
			set_leader_flag = daheita
			set_leader_flag = leader_death_events_blocked  # 阻止原版葬礼事件
			save_global_event_target_as = daheita_leader
		}
		random_owned_leader = {
			limit = {
				is_ruler = no
				leader_class = official
			}
			remove_all_positive_traits = yes
			set_name = NAME_aisida
			change_species = event_target:aisida_leader_species
			change_leader_class = official
			change_leader_portrait = aisida
			change_background_ethic = ethic_materialist
			change_background_job = researcher
			add_skill_without_trait_selection = 3
			add_trait = {trait = leader_aisida_t1 show_message = no}
			add_trait = {trait = leader_aisida_t2 show_message = no}
			add_trait = {trait = leader_aisida_t3 show_message = no}
			set_gender = female
			set_age = 16
			set_leader_flag = legendary_leader
			set_leader_flag = immune_to_negative_traits
			set_leader_flag = aisida
			set_leader_flag = leader_death_events_blocked  # 阻止原版葬礼事件
			save_global_event_target_as = aisida_leader
		}
		random_owned_leader = {
			limit = {
				is_ruler = no
				leader_class = commander
			}
			remove_all_positive_traits = yes
			set_name = NAME_alan
			change_species = event_target:alan_leader_species
			change_leader_class = commander
			change_leader_portrait = alan
			change_background_ethic = ethic_militarist
			change_background_job = soldier
			add_skill_without_trait_selection = 3
			add_trait = {trait = leader_alan_t1 show_message = no}
			add_trait = {trait = leader_alan_t2 show_message = no}
			add_trait = {trait = leader_alan_t3 show_message = no}
			set_gender = male
			set_age = 16
			set_leader_flag = legendary_leader
			set_leader_flag = immune_to_negative_traits
			set_leader_flag = alan
			set_leader_flag = leader_death_events_blocked  # 阻止原版葬礼事件
			save_global_event_target_as = alan_leader
		}
		set_country_flag = hsr_herta_country #黑塔空间站识别标识符
		set_country_flag = daheita_set
		set_country_flag = heita_set
		set_country_flag = aisida_set
		set_country_flag = alan_set
		#奇物，额外的宇宙碎片
		if = {
			limit = {
				this = {
					is_ai = no
				}
			}
			while = {
				count = 2
				random_common_curiosity_get = yes
			}
			random_rare_curiosity_get =yes
			random_epic_curiosity_get = yes
		}
		change_variable = {
			which = yuzhousuipian
			value = 5000
		}
		#额外科技
		give_technology = { tech = tech_robotic_workers message = no }
		give_technology = { tech = tech_powered_exoskeletons message = no }
		give_technology = { tech = tech_robomodding message = no }
		give_technology = { tech = tech_habitat_1 message = no }
		give_technology = { tech = tech_droid_workers message = no }
		give_technology = { tech = tech_synthetic_workers message = no }
		give_technology = { tech = tech_integrated_cybernetics message = no }
		give_technology = { tech = tech_robomodding_points_1 message = no }
		give_technology = { tech = tech_robot_assembly_complex message = no }
		give_technology = { tech = tech_robomodding_points_2 message = no }
		give_technology = { tech = tech_positronic_implants message = no }
		give_technology = { tech = tech_frontier_health message = no }
		give_technology = { tech = tech_genome_mapping message = no }
		give_technology = { tech = tech_vitality_boosters message = no }
		give_technology = { tech = tech_epigenetic_triggers message = no }
		give_technology = { tech = tech_cloning message = no }
		give_technology = { tech = tech_gene_banks message = no }
		give_technology = { tech = tech_gene_seed_purification message = no }
		give_technology = { tech = tech_morphogenetic_field_mastery message = no }
		give_technology = { tech = tech_gene_tailoring message = no }
		give_technology = { tech = tech_glandular_acclimation message = no }
		give_technology = { tech = tech_gene_expressions message = no }
		give_technology = { tech = tech_habitat_1 message = no }
		give_technology = { tech = tech_habitat_2 message = no }
		give_technology = { tech = tech_habitat_3 message = no }
		give_technology = { tech = tech_mega_engineering message = no }
		add_research_option = tech_galactic_archivism
		set_policy = {
			policy = artificial_intelligence_policy
			option = ai_full_rights
		}
		create_species = {
			class = "ROBOT"
			portrait = "heita"
			name = "NAME_heita_robot"
			plural = "NAME_heita_robot"
			adjective = "NAME_heita_robot"
			name_list = "MACHINE1"
			traits = {
				trait = trait_mechanical
				trait = trait_wet_planet_preference
				trait = trait_herta_robot_pop_1
			}
			effect = {
				save_global_event_target_as = heita_robot_species
			}
		}
		save_event_target_as = herta_origin_target
		random_planet_within_border = {
			limit = { has_planet_flag = zhanlanxing }
			save_event_target_as = herta_zhanlanxing
			remove_building = building_colony_shelter
			remove_building = building_commercial_zone
			add_building = herta_holomuseum_1
			add_building = building_holo_theatres
			add_building = building_robot_assembly_plant
			add_district = district_city
			add_district = district_city
			while = {
				count = 4
				add_deposit = d_rushing_waterfalls
				add_deposit = d_ore_rich_caverns
				add_district = district_mining
				add_district = district_generator
			}
			add_zone = {
				district = district_city
				zone = zone_research
			}
			add_zone = {
				district = district_city
				zone = zone_industrial
			}
			add_building = {
				zone = zone_research
				building = building_research_lab_1
			}
			add_building = {
				zone = zone_industrial
				building = building_factory_1
			}
			add_building = {
				zone = zone_industrial
				building = building_foundry_1
			}
			while = {
				count = 22
				create_pop_group = {
					size = 100
					species = owner_main_species
				}
				create_pop_group = {
					size = 1
					species = event_target:heita_robot_species
				}
			}
		}
		solar_system = {
			spawn_planet = {
				class = "pc_herta_station"
				location = event_target:herta_zhanlanxing
				orbit_location = yes
				orbit_angle_offset = 135
				orbit_distance_offset = 20
				size = 12
				has_ring = no
				init_effect = {
					set_owner = root
					set_name = {
						key = pc_herta_station
						variable_string = "\\[FROM.from.solar_system.GetName]"
					}
					set_planet_entity = {
						entity = skyislend_entity
					}
					set_surveyed = {
						surveyed = yes
						surveyor = FROM
					}
					set_all_comms_surveyed = yes
					clear_blockers = yes
					set_planet_flag = megastructure
					set_planet_flag = herta_habitat
					set_planet_flag = habitat
					set_planet_flag = colony_event #防止出现原版殖民地的各种奇怪事件
					remove_district = district_city
					add_district = district_herta_1
					add_district = district_herta_1
					add_district = district_herta_2
					add_district = district_herta_2
					add_district = district_herta_3
					add_district = district_herta_3
					add_district = district_herta_4
					add_district = district_herta_4
					remove_building = building_hydroponics_farm
					add_building = herta_holomuseum_1
					add_building = building_holo_theatres
					add_building = building_robot_assembly_plant
					add_zone = {
						district = district_herta_1
						zone = zone_unity
					}
					add_zone = {
						district = district_herta_1
						zone = zone_pc_herta_research
					}
					while = {
						count = 5
						add_deposit = d_herta_debuff
					}
					while = {
						count = 14
						create_pop_group = {
							size = 100
							species = owner_main_species
						}
						create_pop_group = {
							size = 2
							species = event_target:heita_robot_species
						}
					}
				}
			}
		}
		country_event = { id = DOT_SR_Herta.10 days = 180 }
	}
}
#通用黑塔主线，双分支，加强防御/增加外太空作战能力
country_event = {
	id = DOT_SR_Herta.10
	title = DOT_SR_Herta.10.tittle
	desc = DOT_SR_Herta.10.desc
	picture = GFX_evt_hsr_herta_10
	is_triggered_only = yes
	trigger = {
		has_origin = origin_Herta_Space_Station
	}
	option = {
		name = DOT_SR_Herta.10.a
		hidden_effect = { country_event = { id = DOT_SR_Herta.11 days = 90 } }
	}
}
country_event = {
	id = DOT_SR_Herta.11
	title = DOT_SR_Herta.11.tittle
	desc = DOT_SR_Herta.11.desc
	picture = GFX_evt_cosmic_storms_broadcast_hacking
	is_triggered_only = yes
	trigger = {
		has_origin = origin_Herta_Space_Station
	}
	option = {
		name = DOT_SR_Herta.11.a
		custom_tooltip = DOT_SR_Herta.11.a.desc
		hidden_effect = {
			set_country_flag = remove_herta_debuff
			country_event = { id = DOT_SR_Herta.13 days = 90 }
		}
		ai_chance = {
			weight = 5
		}
	}
	option = {
		name = DOT_SR_Herta.11.b
		custom_tooltip = DOT_SR_Herta.11.b.desc
		hidden_effect = {
			set_country_flag = remove_herta_debuff_b
			country_event = { id = DOT_SR_Herta.13 days = 90 }
		}
		ai_chance = {
			weight = 5
		}
	}
}
country_event = {
	id = DOT_SR_Herta.12
	title = DOT_SR_Herta.12.tittle
	desc = {
		trigger = {
			has_country_flag = remove_herta_debuff
		}
		text = DOT_SR_Herta.12.desc.a

	}
	desc = {
		trigger = {
			has_country_flag = remove_herta_debuff_b
		}
		text = DOT_SR_Herta.12.desc.b
	}
	picture = GFX_evt_tradestation_interior
	is_triggered_only = yes
	trigger = {
		has_origin = origin_Herta_Space_Station
	}
	option = {
		name = GOOD
		add_monthly_resource_mult = {
			resource = unity
			value = @tier3unityreward
			min = @tier3unitymin
			max = @tier3unitymax
		}
	}
}
country_event = {
	id = DOT_SR_Herta.13
	title = DOT_SR_Herta.13.tittle
	desc = DOT_SR_Herta.13.desc
	picture = GFX_evt_voting
	is_triggered_only = yes
	trigger = {
		has_origin = origin_Herta_Space_Station
	}
	option = {
		name = DOT_SR_Herta.13.a
		allow = { resource_stockpile_compare = { resource = energy value >= 1500 } }
		add_resource = { energy = -1500 }
		add_research_option = tech_deep_space_citadel
		random_owned_planet = {
			while = {
				count = 5
				create_army = {
					name = "defense_army"
					owner = this.owner
					type = robotic_army
				}
			}
		}
		hidden_effect = {
			country_event = { id = DOT_SR_Herta.14 days = 360 }
		}
		ai_chance = {
			weight = 5
		}
	}
	option = {
		name = DOT_SR_Herta.13.b
		allow = { resource_stockpile_compare = { resource = energy value >= 1500 } }
		add_resource = { energy = -1500 }
		add_research_option = tech_cruisers
		capital_scope = {
			create_fleet = {
				name = "NAME_Herta_Space_Station"
				effect = {
					set_owner = root
					while = {
						count = 20
						create_ship = {
							name = "NAME_Payback_Digsite_Drone"
							design = "NAME_Payback_Digsite_Drone"
							graphical_culture = "DOT_SR_humanoid_01"
						}
					}
					set_location = prev
					set_fleet_stance = aggressive
					set_aggro_range_measure_from = return_point
					set_aggro_range = 0
					queue_actions = {
						wait = {
							duration = 320
							random = 80
						}
					}
				}
			}
		}
		hidden_effect = {
			country_event = { id = DOT_SR_Herta.14 days = 360 }
		}
		ai_chance = {
			weight = 5
		}
	}
	option = {
		name = DOT_SR_Herta.13.c
		hidden_effect = {
			country_event = { id = DOT_SR_Herta.14 days = 360 }
		}
	}
}
country_event = {
	id = DOT_SR_Herta.14
	title = DOT_SR_Herta.14.tittle
	desc = DOT_SR_Herta.14.desc
	picture = GFX_evt_hsr_herta_14
	is_triggered_only = yes
	trigger = {
		has_origin = origin_Herta_Space_Station
	}
	option = {
		name = DOT_SR_Herta.14.a
		custom_tooltip = DOT_SR_Herta.14.a.desc
		hidden_effect = {
			set_country_flag = herta_up
		}
	}
}
#飞升
country_event = {
    id = DOT_SR_Herta.50
    title = DOT_SR_Herta.50.tittle
    desc = DOT_SR_Herta.50.desc
    picture = GFX_evt_timeworm_transcriptions
    is_triggered_only = yes
    trigger = {
        has_origin = origin_Herta_Space_Station
    }
    option = {
        name = DOT_SR_Herta.50.a
        custom_tooltip = DOT_SR_Herta.50.tt
        hidden_effect = {
            country_event = { id = DOT_SR_Herta.51 days = 90 }
        }
    }
}
country_event = {
    id = DOT_SR_Herta.51
    title = DOT_SR_Herta.51.tittle
    desc = DOT_SR_Herta.51.desc
    picture = GFX_evt_three_sided_deal
    is_triggered_only = yes
    trigger = {
        has_origin = origin_Herta_Space_Station
    }
    option = {
        name = DOT_SR_Herta.51.a
        hidden_effect = {
            country_event = { id = DOT_SR_Herta.52 days = 90 }
        }
        ai_chance = {
            weight = 100
        }
    }
    option = {
        name = DOT_SR_Herta.51.b
        hidden_effect = {
            set_country_flag = tr_herta_select_ruamei_1
            country_event = { id = DOT_SR_Herta.52 days = 90 }
        }
        ai_chance = {
            weight = 100
        }
    }
    option = {
        name = DOT_SR_Herta.51.c
        hidden_effect = {
            set_country_flag = tr_herta_select_luosi_1
            country_event = { id = DOT_SR_Herta.52 days = 90 }
        }
        ai_chance = {
            weight = 100
        }
    }
}
country_event = {
    id = DOT_SR_Herta.52
    title = DOT_SR_Herta.52.tittle
    desc = DOT_SR_Herta.52.desc
    picture = GFX_evt_circuitry_modification
    is_triggered_only = yes
    trigger = {
        has_origin = origin_Herta_Space_Station
    }
    option = {
        name = DOT_SR_Herta.52.a
        hidden_effect = {
            country_event = { id = DOT_SR_Herta.53 days = 90 }
        }
        ai_chance = {
            weight = 100
        }
    }
    option = {
        name = DOT_SR_Herta.52.b
        hidden_effect = {
            set_country_flag = tr_herta_select_ruamei_2
            country_event = { id = DOT_SR_Herta.53 days = 90 }
        }
        ai_chance = {
            weight = 100
        }
    }
    option = {
        name = DOT_SR_Herta.52.c
        hidden_effect = {
            set_country_flag = tr_herta_select_luosi_2
            country_event = { id = DOT_SR_Herta.53 days = 90 }
        }
        ai_chance = {
            weight = 100
        }
    }
}
country_event = {
    id = DOT_SR_Herta.53
    title = DOT_SR_Herta.53.tittle
    desc = DOT_SR_Herta.53.desc
    picture = GFX_evt_cyberization_2
    is_triggered_only = yes
    trigger = {
        has_origin = origin_Herta_Space_Station
    }
    option = {
        name = DOT_SR_Herta.53.a
        custom_tooltip = DOT_SR_Herta.53.tt
        hidden_effect = {
            set_country_flag = tr_herta_discuss_adopt
        }
        ai_chance = {
            weight = 100
        }
    }
    option = {
        name = DOT_SR_Herta.53.b
        custom_tooltip = DOT_SR_Herta.53.tt
        hidden_effect = {
            set_country_flag = tr_herta_select_ruamei_4
            set_country_flag = tr_herta_discuss_adopt
        }
        ai_chance = {
            weight = 100
        }
    }
    option = {
        name = DOT_SR_Herta.53.c
        custom_tooltip = DOT_SR_Herta.53.tt
        hidden_effect = {
            set_country_flag = tr_herta_select_luosi_4
            set_country_flag = tr_herta_discuss_adopt
        }
        ai_chance = {
            weight = 100
        }
    }
}
country_event = {
    id = DOT_SR_Herta.100
    title = "DOT_SR_Herta.100.name"
    desc = "DOT_SR_Herta.100.desc"
    picture = GFX_evt_cyberization_1

    is_triggered_only = yes

    immediate = {
        if = {
            limit = {
                any_owned_pop_group = {
                    is_exact_same_species = root
                }
            }
            weighted_random_owned_pop_group = {
                limit = { is_exact_same_species = root }
                create_herta_cybernetic_species_mod = yes
                species = { save_event_target_as = new_main_species }
            }
        }
        else = {
            weighted_random_owned_pop_group = {
                limit = { is_same_species = root }
                create_herta_cybernetic_species_mod = yes
                species = { save_event_target_as = new_main_species }
            }
        }
        change_dominant_species = { species = event_target:new_main_species }
        every_owned_leader = {
            limit = {
                species = { has_trait = trait_herta_pop_up_t1 }
                NOR = {
                    has_trait = leader_trait_herta_pop_up_t1
                    has_leader_flag = renowned_leader
                    has_leader_flag = legendary_leader
                }
            }
            add_trait = {
                trait = leader_trait_herta_pop_up_t1
                show_message = no
            }
        }

        create_message = {
            type = MESSAGE_ALL_GAINED_TRAIT
            localization = MESSAGE_ALL_GAINED_TRAIT_DESC
            days = @toast_message_days
            variable = {
                type = key
                value = leader_trait_herta_pop_up_t1
                localization = TRAIT
            }
            variable = {
                key = TRAIT_KEY
                value = leader_trait_herta_pop_up_t1
            }
            variable = {
                key = "border"
                value = "GFX_invisible"
            }
        }

        every_pool_leader = {
            limit = {
                species = { has_trait = trait_herta_pop_up_t1 }
                NOT = { has_trait = leader_trait_herta_pop_up_t1 }
            }
            add_trait = {
                trait = leader_trait_herta_pop_up_t1
                show_message = no
            }
        }
        set_country_flag = tr_herta_select_herta_2_success
    }

    option = {
        name = "utopia.2501.a"
        add_research_option = tech_herta_choose_1
    }
}
country_event = {
    id = DOT_SR_Herta.101
    is_triggered_only = yes
    hide_window = yes

    trigger = {
        from = {
            species = { has_trait = trait_herta_pop_up_t1 }
        }
    }
    immediate = {
        from = {
            add_trait = {
                trait = leader_trait_herta_pop_up_t1
                show_message = no
            }
        }
    }
}
country_event = {#同化
    id = DOT_SR_Herta.102
    is_triggered_only = yes
    hide_window = yes

    trigger = {
        any_owned_species = {
            has_citizenship_type = {
                country = root
                type = citizenship_herta_assimilation
            }
        }
    }
    immediate = {
        if = {
            limit = { has_tradition = tr_herta_discuss_2 }
            if = {
                limit = {
                    any_owned_species = {
                        has_citizenship_type = {
                            country = root
                            type = citizenship_herta_assimilation
                        }
                    }
                }
                weighted_random_owned_pop_group = {
                    #limit = { is_exact_same_species = root }
                    create_herta_cybernetic_species_mod = yes
                    species = { save_event_target_as = new_main_species }
                }
            }
            else = {
                weighted_random_owned_pop_group = {
                    #limit = { is_same_species = root }
                    create_herta_cybernetic_species_mod = yes
                    species = { save_event_target_as = new_main_species }
                }
            }
            change_dominant_species = { species = event_target:new_main_species }
            every_owned_leader = {
                limit = {
                    species = { has_trait = trait_herta_pop_up_t1 }
                    NOR = {
                        has_trait = leader_trait_herta_pop_up_t1
                        has_leader_flag = renowned_leader
                        has_leader_flag = legendary_leader
                    }
                }
                add_trait = {
                    trait = leader_trait_herta_pop_up_t1
                    show_message = no
                }
            }
            every_pool_leader = {
                limit = {
                    species = { has_trait = trait_herta_pop_up_t1 }
                    NOT = { has_trait = leader_trait_herta_pop_up_t1 }
                }
                add_trait = {
                    trait = leader_trait_herta_pop_up_t1
                    show_message = no
                }
            }
        }
        else_if = {
            limit = { has_tradition = tr_herta_discuss_2_2 }
            if = {
                limit = {
                    any_owned_species = {
                        has_citizenship_type = {
                            country = root
                            type = citizenship_herta_assimilation
                        }
                    }
                }
                weighted_random_owned_pop_group = {
                    #limit = { is_exact_same_species = root }
                    create_luosi_synth_species_effect = yes
                    species = { save_event_target_as = new_main_species }
                }
            }
            else = {
                weighted_random_owned_pop_group = {
                    #limit = { is_same_species = root }
                    create_luosi_synth_species_effect = yes
                    species = { save_event_target_as = new_main_species }
                }
            }
            change_dominant_species = { species = event_target:new_main_species }
            every_owned_leader = {
                limit = {
                    species = { has_trait = trait_luosi_pop_up_t1 }
                    NOR = {
                        has_trait = leader_trait_luosi_pop_up_t1
                        has_leader_flag = renowned_leader
                        has_leader_flag = legendary_leader
                    }
                }
                add_trait = {
                    trait = leader_trait_luosi_pop_up_t1
                    show_message = no
                }
            }
            every_pool_leader = {
                limit = {
                    species = { has_trait = trait_luosi_pop_up_t1 }
                    NOT = { has_trait = leader_trait_luosi_pop_up_t1 }
                }
                add_trait = {
                    trait = leader_trait_luosi_pop_up_t1
                    show_message = no
                }
            }
        }
    }
}
country_event = {
    id = DOT_SR_Herta.103
    title = "DOT_SR_Herta.103.name"
    desc = "DOT_SR_Herta.103.desc"
    picture = GFX_evt_cybernetics

    is_triggered_only = yes

    immediate = {

    }

    option = {
        name = "DOT_SR_Herta.103.a"
        add_monthly_resource_mult = {
            resource = engineering_research
            value = @tier2unityreward
            min = @tier2unitymin
            max = @tier2unitymax
        }
    }
}
country_event = {
    id = DOT_SR_Herta.104
    title = "DOT_SR_Herta.104.name"
    desc = "DOT_SR_Herta.104.desc"
    picture = GFX_evt_cyberization_2

    is_triggered_only = yes

    immediate = {

    }

    option = {
        name = "DOT_SR_Herta.104.a"
    }
}
country_event = {
    id = DOT_SR_Herta.105
    title = "DOT_SR_Herta.105.name"
    desc = "DOT_SR_Herta.105.desc"
    picture = GFX_evt_engineering_research

    is_triggered_only = yes

    immediate = {

    }

    option = {
        name = "DOT_SR_Herta.105.a"
        add_research_option = tech_neuro_quantum_links
    }
}
country_event = {
    id = DOT_SR_Herta.106
    title = "DOT_SR_Herta.106.name"
    desc = "DOT_SR_Herta.106.desc"
    picture = GFX_evt_cyberization_2

    is_triggered_only = yes

    immediate = {

    }

    option = {
        name = "DOT_SR_Herta.106.a"

    }
}
country_event = {
    id = DOT_SR_Herta.200
    title = "DOT_SR_Herta.200.name"
    desc = "DOT_SR_Herta.200.desc"
    picture = GFX_evt_circuitry_modification

    is_triggered_only = yes

    immediate = {

    }

    option = {
        name = "DOT_SR_Herta.200.a"
        add_monthly_resource_mult = {
            resource = society_research
            value = @tier2unityreward
            min = @tier2unitymin
            max = @tier2unitymax
        }
    }
}
country_event = {
    id = DOT_SR_Herta.201
    title = "DOT_SR_Herta.201.name"
    desc = "DOT_SR_Herta.201.desc"
    picture = GFX_evt_scientific_experiments

    is_triggered_only = yes

    immediate = {

    }

    option = {
        name = "DOT_SR_Herta.201.a"
        add_research_option = tech_gene_seed_purification
        add_research_option = tech_gene_tailoring
        add_research_option = tech_glandular_acclimation
        add_research_option = tech_gene_expressions
    }
}
country_event = {
    id = DOT_SR_Herta.202
    title = "DOT_SR_Herta.202.name"
    desc = "DOT_SR_Herta.202.desc"
    picture = GFX_evt_genetic_modification

    is_triggered_only = yes

    immediate = {
        if = {
            limit = {
                any_owned_pop_group = {
                    is_exact_same_species = root
                }
            }
            weighted_random_owned_pop_group = {
                limit = { is_exact_same_species = root }
                create_ruanmei_gene_species_mod = yes
                species = { save_event_target_as = new_main_species }
            }
        }
        else = {
            weighted_random_owned_pop_group = {
                limit = { is_same_species = root }
                create_ruanmei_gene_species_mod = yes
                species = { save_event_target_as = new_main_species }
            }
        }
        change_dominant_species = { species = event_target:new_main_species }
        every_owned_leader = {
            limit = {
                species = { has_trait = trait_ruanmei_pop_up_t1 }
                NOR = {
                    has_trait = leader_trait_ruanmei_pop_up_t1
                    has_leader_flag = renowned_leader
                    has_leader_flag = legendary_leader
                }
            }
            add_trait = {
                trait = leader_trait_ruanmei_pop_up_t1
                show_message = no
            }
        }

        create_message = {
            type = MESSAGE_ALL_GAINED_TRAIT
            localization = MESSAGE_ALL_GAINED_TRAIT_DESC
            days = @toast_message_days
            variable = {
                type = key
                value = leader_trait_ruanmei_pop_up_t1
                localization = TRAIT
            }
            variable = {
                key = TRAIT_KEY
                value = leader_trait_ruanmei_pop_up_t1
            }
            variable = {
                key = "border"
                value = "GFX_invisible"
            }
        }

        every_pool_leader = {
            limit = {
                species = { has_trait = trait_ruanmei_pop_up_t1 }
                NOT = { has_trait = leader_trait_ruanmei_pop_up_t1 }
            }
            add_trait = {
                trait = leader_trait_ruanmei_pop_up_t1
                show_message = no
            }
        }
        set_country_flag = tr_herta_select_ruanmei_2_success
    }

    option = {
        name = "DOT_SR_Herta.202.a"
        add_research_option = tech_ruanmei_choose_1
    }
}
country_event = {
    id = DOT_SR_Herta.203
    is_triggered_only = yes
    hide_window = yes

    trigger = {
        from = {
            species = { has_trait = trait_ruanmei_pop_up_t1 }
        }
    }
    immediate = {
        from = {
            add_trait = {
                trait = leader_trait_ruanmei_pop_up_t1
                show_message = no
            }
        }
    }
}
country_event = {
    id = DOT_SR_Herta.300
    title = "DOT_SR_Herta.300.name"
    desc = "DOT_SR_Herta.300.desc"
    picture = GFX_evt_synth_fertility

    is_triggered_only = yes

    immediate = {
        set_country_flag = synthetic_empire
        if = {
            limit = {
                has_policy_flag = robots_outlawed
            }
            set_policy = {
                policy = robot_pop_policy
                option = robot_pops_allowed
                cooldown = yes
            }
        }
        if = {
            limit = {
                OR = {
                    has_policy_flag = ai_servitude
                    has_policy_flag = ai_outlawed
                }
            }
            set_policy = {
                policy = artificial_intelligence_policy
                option = ai_full_rights
                cooldown = yes
            }
        }
        if = {
            limit = {
                OR = {
                    is_active_resolution = "resolution_divinity_silence_the_soulless"
                    is_active_resolution = "resolution_divinity_a_defined_purpose"
                }
            }
            owner = {
                set_timed_country_flag = { flag = resolution_breached_synthetic_evolution days = 3600 }
            }
        }
        give_technology = { tech = tech_bio_reactor message = no }
        create_luosi_synth_species_effect = yes
        every_owned_pop_group = {
            limit = {
                is_being_purged = no
                species = {
                    is_robotic = no
                    is_livestock = no
                }
            }
            change_species = event_target:luosi_synthspecies@root.owner
        }

        every_controlled_ship = {
            limit = {
                is_ship_class = shipclass_colonizer
                species = {
                    is_robotic = no
                    is_livestock = no
                }
            }
            change_species = event_target:luosi_synthspecies@root.owner
        }

        every_owned_army = {
            limit = {
                exists = species
                #exists = planet
                species = {
                    is_robotic = no
                    is_livestock = no
                }
                army_type = assault_army
            }
            modify_army = {
                name = random
                type = "robotic_army"
                species = event_target:luosi_synthspecies@root.owner
            }
        }

        every_owned_army = {
            limit = {
                exists = species
                exists = planet
                species = {
                    is_robotic = no
                    is_livestock = no
                }
                army_type = defense_army
            }
            modify_army = {
                name = random
                type = "robotic_defense_army"
                species = event_target:luosi_synthspecies@root.owner
            }
        }

        every_owned_leader = {
            limit = {
                OR = {
                    species = {
                        is_robotic = no
                        is_livestock = no
                    }
                    has_trait = leader_trait_luosi_pop_up_t1
                }
                NOR = {
                    has_leader_flag = renowned_leader
                    has_leader_flag = legendary_leader
                }
            }
            change_species = event_target:luosi_synthspecies@root.owner
            change_leader_portrait = species
        }
        every_pool_leader = {
            limit = {
                OR = {
                    species = {
                        is_robotic = no
                        is_livestock = no
                    }
                    has_trait = leader_trait_luosi_pop_up_t1
                }
            }
            change_species = event_target:luosi_synthspecies@root.owner
            change_leader_portrait = species
        }
        change_dominant_species = { species = event_target:luosi_synthspecies@root.owner }

        every_owned_leader = {
            limit = {
                species = { has_trait = trait_mechanical }
                NOR = {
                    has_trait = leader_trait_luosi_pop_up_t1
                    has_leader_flag = renowned_leader
                    has_leader_flag = legendary_leader
                }
            }
            add_trait = {
                trait = leader_trait_luosi_pop_up_t1
                show_message = no
            }
            remove_trait = leader_trait_cyborg
        }

        create_message = {
            type = MESSAGE_ALL_GAINED_TRAIT
            localization = MESSAGE_ALL_GAINED_TRAIT_DESC
            days = @toast_message_days
            variable = {
                type = key
                value = leader_trait_luosi_pop_up_t1
                localization = TRAIT
            }
            variable = {
                key = TRAIT_KEY
                value = leader_trait_luosi_pop_up_t1
            }
            variable = {
                key = "border"
                value = "GFX_invisible"
            }
        }

        every_envoy = {
            limit = {
                species = {
                    is_robotic = no
                    is_livestock = no
                }
            }
            change_species = event_target:luosi_synthspecies@root.owner
            change_leader_portrait = species
        }
        every_pool_leader = {
            limit = {
                species = { has_trait = trait_mechanical }
                NOT = { has_trait = leader_trait_luosi_pop_up_t1 }
            }
            add_trait = {
                trait = leader_trait_luosi_pop_up_t1
                show_message = no
            }
            remove_trait = leader_trait_cyborg
        }
        set_country_flag = tr_herta_select_luosi_2_success
    }

    option = {
        name = "utopia.2501.a"
        add_research_option = tech_luosi_choose_1
    }
}
country_event = {
    id = DOT_SR_Herta.301
    title = "DOT_SR_Herta.301.name"
    desc = "DOT_SR_Herta.301.desc"
    picture = GFX_evt_scientific_experiments

    is_triggered_only = yes

    immediate = {

    }

    option = {
        name = "DOT_SR_Herta.301.a"
    }
}
country_event = {
    id = DOT_SR_Herta.302
    title = "DOT_SR_Herta.302.name"
    desc = "DOT_SR_Herta.302.desc"
    picture = GFX_evt_genetic_modification

    is_triggered_only = yes

    immediate = {

    }

    option = {
        name = "DOT_SR_Herta.302.a"
        add_research_option = tech_identity_copy
        add_research_option = tech_identity_fusion
        add_research_option = tech_identity_initialization
    }
}
country_event = {
    id = DOT_SR_Herta.303
    is_triggered_only = yes
    hide_window = yes

    trigger = {
        from = {
            species = { has_trait = trait_luosi_pop_up_t1 }
        }
    }
    immediate = {
        from = {
            add_trait = {
                trait = leader_trait_luosi_pop_up_t1
                show_message = no
            }
        }
    }
}
